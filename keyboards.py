import datetime
import math

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from config import settings


# def get_main_menu_kb() -> InlineKeyboardMarkup:
#     return InlineKeyboardMarkup(
#         inline_keyboard=[
#             [InlineKeyboardButton(text="üéÅ –ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ (24—á)", callback_data="trial:get")],
#             [InlineKeyboardButton(text="üõí –ö—É–ø–∏—Ç—å VPN", callback_data="menu:buy")],
#             [InlineKeyboardButton(text="üìñ –ú–æ–∏ –∫–ª—é—á–∏", callback_data="menu:keys")],
#             [
#                 InlineKeyboardButton(text="‚ÑπÔ∏è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", callback_data="menu:instruction"),
#                 InlineKeyboardButton(text="üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="menu:support"),
#             ],
#         ]
#     )


def get_country_selection_kb() -> InlineKeyboardMarkup:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞–Ω—ã."""
    buttons = []
    countries = sorted(list(set(server.country for server in settings.XUI_SERVERS)))
    for country in countries:
        flag = ""
        premium = ""
        if country == "–§–∏–Ω–ª—è–Ω–¥–∏—è":
            flag = "üá´üáÆ"
            premium = "‚ö°"
        elif country == "–ì–µ—Ä–º–∞–Ω–∏—è":
            flag = "üá©üá™"
            premium = "üîπ"
        elif country == "–ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã":
            flag = "üá≥üá±"
            premium = "üîπ"
        buttons.append(
            InlineKeyboardButton(text=f"{premium} {country} {flag}", callback_data=f"select_country:{country}")
        )

    keyboard = []
    for i in range(0, len(buttons), 2):
        keyboard.append(buttons[i:i + 2])

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    keyboard.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="menu:main")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_instruction_platforms_kb() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –û–° –≤ —Ä–∞–∑–¥–µ–ª–µ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="üì± Android", url="https://teletype.in/@coid_siemens/0BKy1e3yrgt"),
                InlineKeyboardButton(text="üçé iPhone", url="https://teletype.in/@coid_siemens/3vXPZr2S0Kn"),
            ],
            [
                InlineKeyboardButton(text="üíª Windows", url="https://teletype.in/@coid_siemens/JnYNn8TyoDG"),
                InlineKeyboardButton(text="üçè Mac", url="https://teletype.in/@coid_siemens/UVA_Tk0VyQK"),
            ],
            [InlineKeyboardButton(
                text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π",
                url="https://teletype.in/@coid_siemens/3PPKfFAHxhw"
            )],
            [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="menu:main")],
        ]
    )


def get_back_to_instructions_kb() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –û–°"""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –û–°", callback_data="menu:instruction")]
        ]
    )


def get_payment_kb(payment_url: str, order_id: int) -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å", url=payment_url)],
            [InlineKeyboardButton(text="üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É", callback_data=f"check_payment:{order_id}")],
        ]
    )


def get_payment_method_kb(order_id: int, country: str) -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üí≥ –ö–∞—Ä—Ç–æ–π / –ÆMoney / –°–ë–ü", callback_data=f"pay_method:default:{order_id}")],
            # [InlineKeyboardButton(text="‚ö° –°–∏—Å—Ç–µ–º–∞ –ë—ã—Å—Ç—Ä—ã—Ö –ü–ª–∞—Ç–µ–∂–µ–π (–°–ë–ü)", callback_data=f"pay_method:sbp:{order_id}")],
            # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —Ç–∞—Ä–∏—Ñ–∞
            [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Ç–∞—Ä–∏—Ñ–∞–º", callback_data=f"select_country:{country}")]
        ]
    )


def get_my_keys_kb(keys_on_page: list, total_keys: int, page: int = 0, page_size: int = 5) -> InlineKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è '–ú–æ–∏ –∫–ª—é—á–∏' —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π.
    """
    keyboard = []

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª—é—á–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    if keys_on_page:
        for key in keys_on_page:
            status_icon = "‚úÖ" if key.expires_at > datetime.datetime.now() else "‚ùå"  # –ù—É–∂–µ–Ω –∏–º–ø–æ—Ä—Ç datetime –≤–≤–µ—Ä—Ö—É —Ñ–∞–π–ª–∞
            # ‚ùóÔ∏è –î–æ–±–∞–≤–∏–º callback_data –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ (–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞)
            keyboard.append([
                InlineKeyboardButton(
                    text=f"{status_icon} –ö–ª—é—á (–¥–æ {key.expires_at.strftime('%d.%m.%Y')})",
                    callback_data=f"key_details:{key.id}:{page}"
                    # callback_data="key_details"  # –í—Ä–µ–º–µ–Ω–Ω–æ
                )
            ])

    # --- –ö–Ω–æ–ø–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ ---
    total_pages = math.ceil(total_keys / page_size)
    nav_row = []
    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    if page > 0:
        nav_row.append(
            InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"mykeys_page:{page - 1}")
        )
    # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    if total_pages > 1:
        nav_row.append(
            InlineKeyboardButton(text=f"{page + 1}/{total_pages}", callback_data="ignore")  # –ö–Ω–æ–ø–∫–∞ –±–µ–∑ –¥–µ–π—Å—Ç–≤–∏—è
        )
    # –ö–Ω–æ–ø–∫–∞ "–í–ø–µ—Ä–µ–¥"
    if page + 1 < total_pages:
        nav_row.append(
            InlineKeyboardButton(text="–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è", callback_data=f"mykeys_page:{page + 1}")
        )

    if nav_row:
        keyboard.append(nav_row)  # –î–æ–±–∞–≤–ª—è–µ–º —Ä—è–¥ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏

    # –ö–Ω–æ–ø–∫–∞ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
    keyboard.append([InlineKeyboardButton(text="üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="menu:main")])

    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_key_details_kb(key_id: int, current_page: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–ª—é—á–∞."""
    keyboard = [
        [
            InlineKeyboardButton(text="üîë –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á", callback_data=f"key_copy:{key_id}:{current_page}"),
            InlineKeyboardButton(text="üîÑ –ü—Ä–æ–¥–ª–∏—Ç—å", callback_data=f"key_renew:{key_id}:{current_page}")
        ],
        # –û–±–Ω–æ–≤–ª—è–µ–º callback_data –∫–Ω–æ–ø–∫–∏ –ù–∞–∑–∞–¥
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É", callback_data=f"mykeys_page:{current_page}")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_support_kb() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ –ü–æ–¥–¥–µ—Ä–∂–∫–∞."""
    keyboard = [
        # –ö–Ω–æ–ø–∫–∞-—Å—Å—ã–ª–∫–∞ –Ω–∞ –æ—Ñ–µ—Ä—Ç—É
        [InlineKeyboardButton(
            text="üìú –ü—É–±–ª–∏—á–Ω–∞—è –æ—Ñ–µ—Ä—Ç–∞",
            url="https://telegra.ph/PUBLICHNAYA-OFERTA-o-zaklyuchenii-dogovora-ob-okazanii-uslug-10-27-2"
        )],
        # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="menu:main")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_admin_menu_kb() -> InlineKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω–∞."""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="admin:stats")],
            [InlineKeyboardButton(text="üì£ –†–∞—Å—Å—ã–ª–∫–∞", callback_data="admin:broadcast")],
            [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="menu:main")]
        ]
    )


def get_back_to_admin_kb() -> InlineKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∞ '–ù–∞–∑–∞–¥' –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏."""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–º–µ–Ω—é", callback_data="admin:main")]
        ]
    )


def get_main_menu_kb(user_id: int) -> InlineKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
    –î–ª—è –∞–¥–º–∏–Ω–æ–≤ –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É "–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å".
    """
    keyboard = [
        [InlineKeyboardButton(text="üéÅ –ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ (24—á)", callback_data="trial:get")],
        [InlineKeyboardButton(text="üõí –ö—É–ø–∏—Ç—å VPN", callback_data="menu:buy")],
        [InlineKeyboardButton(text="üìñ –ú–æ–∏ –∫–ª—é—á–∏", callback_data="menu:keys")],
        [
            InlineKeyboardButton(text="‚ÑπÔ∏è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", callback_data="menu:instruction"),
            InlineKeyboardButton(text="üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="menu:support"),
        ],
    ]

    if user_id in settings.get_admin_ids:
        keyboard.insert(1, [
            InlineKeyboardButton(text="üëë –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", callback_data="admin:main")
        ])

    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_admin_stats_kb(page: int, total_pages: int) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∞–¥–º–∏–Ω–∞ (–ø–æ 5 —ç–ª–µ–º–µ–Ω—Ç–æ–≤).
    """
    nav_row = []

    # 1. –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    if page > 0:
        nav_row.append(
            InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"admin:stats_page:{page - 1}")
        )

    # 2. –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    if total_pages > 1:
        nav_row.append(
            InlineKeyboardButton(text=f"{page + 1}/{total_pages}", callback_data="ignore")
        )

    # 3. –ö–Ω–æ–ø–∫–∞ "–í–ø–µ—Ä–µ–¥"
    if page + 1 < total_pages:
        nav_row.append(
            InlineKeyboardButton(text="–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è", callback_data=f"admin:stats_page:{page + 1}")
        )

    keyboard = []
    if nav_row:
        keyboard.append(nav_row)

    # 4. –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–º–µ–Ω—é"
    keyboard.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–º–µ–Ω—é", callback_data="admin:main")])

    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_broadcast_confirmation_kb() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏."""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="‚úÖ –î–∞, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å", callback_data="broadcast:confirm"),
                InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="broadcast:cancel")
            ]
        ]
    )
